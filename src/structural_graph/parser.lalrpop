use crate::structural_graph::ast::*;
use immutable_string::ImmutableString;

grammar;

pub Graph: Vec<Entry> = {
    Node*
}

Node: Entry = {
    <Type> <Str> "[" <Comma<Str>> "]" => Entry::new(<>),
}

Type: EntryType = {
    "Port" => EntryType::Port,
    "DataReg" => EntryType::DataReg,
    "NullReg" => EntryType::NullReg,
}

Str: ImmutableString = {
    <s:r#""[^"]*""#> => ImmutableString::from(&s[1 .. s.len()-1]),
}

Comma<T>: Vec<T> = {
    <v:(<T> ",")*> <e:T?> => match e {
        None => v,
        Some(e) => {
            let mut v = v;
            v.push(e);
            v
        }
    }
}

// Local Variables:
// mode: rust
// End:
